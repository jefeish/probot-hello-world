name: Release Workflow

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PUBLISH_TARGET: jefeish/test22
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest tag
        id: get_tag
        run: echo ::set-output name=TAG::$(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Calculate next version
        id: next_version
        run: echo ::set-output name=NEW_TAG::v$(echo "${{ steps.get_tag.outputs.TAG }}" | cut -d. -f1).$(echo "${{ steps.get_tag.outputs.TAG }}" | cut -d. -f2).$(( $(echo "${{ steps.get_tag.outputs.TAG }}" | cut -d. -f3) + 1))

      - name: Create tag
        run: git tag ${{ steps.next_version.outputs.NEW_TAG }}

      - name: Push tag
        run: git push origin ${{ steps.next_version.outputs.NEW_TAG }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.next_version.outputs.NEW_TAG }}
          release_name: Release ${{ steps.next_version.outputs.NEW_TAG }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: <your_asset_path>
          asset_name: <your_asset_name>
          asset_content_type: <your_asset_content_type>

      - name: Upload release asset to another Repo
        run: |
          gh release upload ${{ env.PUBLISH_TARGET }} ${{ steps.create_release.outputs.upload_url }}:<your_asset_name> --clobber
